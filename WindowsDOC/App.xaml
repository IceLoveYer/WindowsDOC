<Application
    x:Class="WindowsDOC.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa5="http://schemas.fontawesome.com/icons/" StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--  全局颜色  -->
            <Color x:Key="ColorMain1">#F00ECDF0</Color>
            <Color x:Key="ColorMain2">#F0D453EE</Color>
            <Color x:Key="ColorMain3">#FFFFFFFF</Color>
            <Color x:Key="ColorBackground">#FFFFFFFF</Color>
            <Color x:Key="ColorBackgroundBorder">#FFCACACA</Color>
            <Color x:Key="ColorSidebarButton">Transparent</Color>
            <Color x:Key="ColorTopBar">#FFFFFFFF</Color>
            <Color x:Key="ColorMainFrame">#FFFFFFFF</Color>

            <SolidColorBrush x:Key="ColorBrushMain1" Color="{StaticResource ColorMain1}" />
            <SolidColorBrush x:Key="ColorBrushMain2" Color="{StaticResource ColorMain2}" />
            <SolidColorBrush x:Key="ColorBrushMain3" Color="{StaticResource ColorMain3}" />
            <SolidColorBrush x:Key="ColorBrushBackground" Color="{StaticResource ColorBackground}" />
            <SolidColorBrush x:Key="ColorBrushBackgroundBorder" Color="{StaticResource ColorBackgroundBorder}" />
            <SolidColorBrush x:Key="ColorBrushSidebarButton" Color="{StaticResource ColorSidebarButton}" />
            <SolidColorBrush x:Key="ColorBrushTopBar" Color="{StaticResource ColorTopBar}" />
            <SolidColorBrush x:Key="ColorBrushMainFrame" Color="{StaticResource ColorMainFrame}" />



            <!--  菜单公共边框样式  -->
            <Style x:Key="MenuBorderStyle" TargetType="Border">
                <Setter Property="Padding" Value="5" />
                <Setter Property="CornerRadius" Value="5" />
                <Setter Property="BorderBrush" Value="{DynamicResource ColorBrushMain3}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource ColorMain1}" />
                            <GradientStop Offset="0.8" Color="{DynamicResource ColorMain2}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  定义菜单样式  -->
            <Style x:Key="MenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Style="{StaticResource MenuBorderStyle}">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  定义菜单项样式  -->
            <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Height" Value="30" />
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain3}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="menuItemBorder" Padding="5" CornerRadius="5">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Header}" />
                                    <!--  子菜单  -->
                                    <Popup AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Center">
                                        <Border Style="{StaticResource MenuBorderStyle}">
                                            <ItemsPresenter />
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  鼠标悬停时高亮显示  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="menuItemBorder" Property="Background" Value="{DynamicResource ColorBrushMain3}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain2}" />
                                </Trigger>
                                <!--  不可用状态  -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="menuItemBorder" Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  定义菜单项目图标的样式  -->
            <Style x:Key="MenuItemIcon" TargetType="{x:Type fa5:SvgAwesome}">
                <Setter Property="Margin" Value="0,0,4,0" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Width" Value="15" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type MenuItem}, Mode=FindAncestor}}" />
            </Style>



            <!--  定义下拉框按钮样式  -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Border x:Name="ToggleBorder"
                    Margin="5,2,5,2"
                    Background="{DynamicResource ColorBrushMain2}"
                    CornerRadius="5">
                    <Path x:Name="Arrow"
                        Margin="0,0,8,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                        Data="M 0 0 L 4 4 L 8 0 Z"
                        Fill="{DynamicResource ColorBrushMain3}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="ToggleBorder" Property="Background" Value="{DynamicResource ColorBrushMain1}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <!--  定义下拉框样式  -->
            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain3}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ColorBrushMain3}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource ColorMain1}" />
                            <GradientStop Offset="0.8" Color="{DynamicResource ColorMain2}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ComboBoxToggleButton}" />
                                <ContentPresenter
                                    Name="ContentSite" Margin="10,0,26,0" HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False" />
                                <Popup
                                    Name="Popup" AllowsTransparency="True" Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="Bottom" PopupAnimation="Slide">
                                    <Grid
                                        Name="DropDown"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder"
                                            Margin="5,0,5,5" Padding="5"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1" CornerRadius="5">
                                            <ItemsPresenter />
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="comboBoxItemBorder"
                                            Padding="5"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="5">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ColorBrushMain3}" />
                                                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain2}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>



            <!--  定义按钮  -->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource ColorBrushMain2}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain3}" />
                <Setter Property="Margin" Value="2" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <!--  鼠标悬停时的背景色  -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorBrushMain1}" />
                    </Trigger>
                    <!--  按钮被按下时的背景色  -->
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorBrushMain1}" />
                        <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain2}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--  定义按钮图标  -->
            <Style x:Key="ButtonIcon" TargetType="fa5:SvgAwesome">
                <Setter Property="Margin" Value="4" />
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain3}" />
            </Style>



            <!--  定义标签标题样式  -->
            <Style x:Key="TextBlockStyleTitle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Margin" Value="6" />
            </Style>


            <!--  定义单选框  -->
            <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
                <!--  设置圆点和文本居中  -->
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <!--  设置圆点边框色和文本前景色  -->
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain1}" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="templateRoot" Background="Transparent">
                                <!--  定义圆点和文本布局  -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                    <Border x:Name="radioButtonBorder"
                                        Width="15" Height="15"
                                        BorderBrush="{DynamicResource ColorBrushMain1}"
                                        BorderThickness="1.5" CornerRadius="6">
                                        <!--  圆点填充  -->
                                        <Ellipse x:Name="optionMark"
                                            Width="8" Height="8" Fill="Transparent" />
                                    </Border>
                                    <ContentPresenter x:Name="contentPresenter"
                                        Margin="4,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  鼠标悬浮时的样式  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource ColorBrushMain2}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain2}" />
                                </Trigger>
                                <!--  选中状态  -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource ColorBrushMain2}" />
                                </Trigger>
                                <!--  不可用状态  -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="radioButtonBorder" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  定义复选框  -->
            <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
                <!--  设置复选框和文本居中  -->
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <!--  设置复选框边框色和文本前景色  -->
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain1}" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent">
                                <!--  定义复选框和文本布局  -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                    <Border x:Name="checkBoxBorder"
                                        Width="15" Height="15"
                                        BorderBrush="{DynamicResource ColorBrushMain1}"
                                        BorderThickness="1.5" CornerRadius="2">
                                        <!--  复选框填充  -->
                                        <Rectangle x:Name="mark"
                                            Width="8" Height="8" Fill="Transparent" />
                                    </Border>
                                    <ContentPresenter x:Name="contentPresenter"
                                        Margin="4,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  鼠标悬浮时的样式  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource ColorBrushMain2}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain2}" />
                                </Trigger>
                                <!--  选中状态  -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="mark" Property="Fill" Value="{DynamicResource ColorBrushMain2}" />
                                </Trigger>
                                <!--  不可用状态  -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="checkBoxBorder" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="mark" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  定义滚动条  -->
            <Style x:Key="ScrollBarStyle" TargetType="ScrollBar">
                <Setter Property="Width" Value="20" />
                <Setter Property="Margin" Value="5,0,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="20" />
                                </Grid.RowDefinitions>

                                <!--  定义滚动条的背景  -->
                                <Border Grid.RowSpan="3" Background="{DynamicResource ColorBrushMain2}" CornerRadius="5" />

                                <!--  定义滚动条的上按钮  -->
                                <Button Grid.Row="0" Command="ScrollBar.LineUpCommand" Style="{DynamicResource ButtonStyle}">
                                    <fa5:SvgAwesome Icon="Solid_AngleUp" Style="{DynamicResource ButtonIcon}" />
                                </Button>
                                <!--  定义滚动条的下按钮  -->
                                <Button x:Name="ScrollButtonUp" Grid.Row="2"
                                    Command="ScrollBar.LineDownCommand"
                                    Style="{DynamicResource ButtonStyle}">
                                    <fa5:SvgAwesome Icon="Solid_AngleDown" Style="{DynamicResource ButtonIcon}" />
                                </Button>

                                <!--  定义滚动条的滑块，设置跟随  -->
                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border x:Name="ThumbBorder" Margin="3,0,3,0" CornerRadius="5">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Offset="0" Color="{DynamicResource ColorMain2}" />
                                                                <GradientStop Offset="0.4" Color="{DynamicResource ColorMain1}" />
                                                                <GradientStop Offset="0.6" Color="{DynamicResource ColorMain1}" />
                                                                <GradientStop Offset="1" Color="{DynamicResource ColorMain2}" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>

                                                    <ControlTemplate.Triggers>
                                                        <!--  鼠标悬停时的背景色  -->
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="ThumbBorder" Property="Background" Value="{DynamicResource ColorBrushMain1}" />
                                                        </Trigger>
                                                        <!--  按钮被按下时的背景色  -->
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter TargetName="ThumbBorder" Property="Background" Value="{DynamicResource ColorBrushMain3}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!--  定义编辑框  -->
            <Style x:Key="TextBoxStyle" TargetType="TextBox">
                <Setter Property="Foreground" Value="{DynamicResource ColorBrushMain1}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ColorBrushMain1}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border
                                Margin="5,2,5,2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" CornerRadius="5">
                                <!--  定义滚动条  -->
                                <ScrollViewer x:Name="PART_ContentHost" Background="{x:Null}">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollBarStyle}" />
                                    </ScrollViewer.Resources>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu Style="{StaticResource MenuStyle}">
                            <!--  复制  -->
                            <MenuItem Command="ApplicationCommands.Copy" Style="{StaticResource MenuItemStyle}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_Copy" Style="{StaticResource MenuItemIcon}" />
                                        <TextBlock VerticalAlignment="Center" Text="复制 Ctrl+C" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <!--  粘贴  -->
                            <MenuItem Command="ApplicationCommands.Paste" Style="{StaticResource MenuItemStyle}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_Paste" Style="{StaticResource MenuItemIcon}" />
                                        <TextBlock VerticalAlignment="Center" Text="粘贴 Ctrl+V" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <!--  剪切  -->
                            <MenuItem Command="ApplicationCommands.Cut" Style="{StaticResource MenuItemStyle}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_Cut" Style="{StaticResource MenuItemIcon}" />
                                        <TextBlock VerticalAlignment="Center" Text="剪切 Ctrl+X" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <!--  全选  -->
                            <MenuItem Command="ApplicationCommands.SelectAll" Style="{StaticResource MenuItemStyle}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_ObjectGroup" Style="{StaticResource MenuItemIcon}" />
                                        <TextBlock VerticalAlignment="Center" Text="全选 Ctrl+A" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <!--  撤销  -->
                            <MenuItem Command="ApplicationCommands.Undo" Style="{StaticResource MenuItemStyle}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_Undo" Style="{StaticResource MenuItemIcon}" />
                                        <TextBlock VerticalAlignment="Center" Text="撤销 Ctrl+Z" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  定义进度条  -->
            <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="35" />
                                </Grid.ColumnDefinitions>

                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2">
                                    <Grid x:Name="PART_Track">
                                        <Border x:Name="PART_Indicator"
                                            HorizontalAlignment="Left"
                                            Background="{TemplateBinding Foreground}"
                                            CornerRadius="2" />
                                    </Grid>
                                </Border>
                                <TextBlock Grid.Column="1"
                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                    Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar}, Path=Value, StringFormat={}{0:0}%}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--  定义阴影边框  -->
            <Style x:Key="BorderShadedStyle" TargetType="Border">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="15" Direction="0" Opacity="0.25"
                            ShadowDepth="0" />
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
